// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tinykvpb.proto

#include "tinykvpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace tinykvpb {
}  // namespace tinykvpb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_tinykvpb_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tinykvpb_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tinykvpb_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tinykvpb_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_tinykvpb_2eproto[] =
  "\n\016tinykvpb.proto\022\010tinykvpb\032\rkvrpcpb.prot"
  "o\032\023raft_serverpb.proto\032\020raft_cmdpb.proto"
  "\032\021coprocessor.proto2\242\t\n\006TinyKv\0224\n\005KvGet\022"
  "\023.kvrpcpb.GetRequest\032\024.kvrpcpb.GetRespon"
  "se\"\000\0227\n\006KvScan\022\024.kvrpcpb.ScanRequest\032\025.k"
  "vrpcpb.ScanResponse\"\000\022C\n\nKvPrewrite\022\030.kv"
  "rpcpb.PrewriteRequest\032\031.kvrpcpb.Prewrite"
  "Response\"\000\022=\n\010KvCommit\022\026.kvrpcpb.CommitR"
  "equest\032\027.kvrpcpb.CommitResponse\"\000\022U\n\020KvC"
  "heckTxnStatus\022\036.kvrpcpb.CheckTxnStatusRe"
  "quest\032\037.kvrpcpb.CheckTxnStatusResponse\"\000"
  "\022R\n\017KvBatchRollback\022\035.kvrpcpb.BatchRollb"
  "ackRequest\032\036.kvrpcpb.BatchRollbackRespon"
  "se\"\000\022L\n\rKvResolveLock\022\033.kvrpcpb.ResolveL"
  "ockRequest\032\034.kvrpcpb.ResolveLockResponse"
  "\"\000\022Y\n\016TransferLeader\022!.raft_cmdpb.Transf"
  "erLeaderRequest\032\".raft_cmdpb.TransferLea"
  "derResponse\"\000\022Q\n\016PeerConfChange\022\035.raft_c"
  "mdpb.ChangePeerRequest\032\036.raft_cmdpb.Chan"
  "gePeerResponse\"\000\022D\n\013SplitRegion\022\030.raft_c"
  "mdpb.SplitRequest\032\031.raft_cmdpb.SplitResp"
  "onse\"\000\022;\n\006RawGet\022\026.kvrpcpb.RawGetRequest"
  "\032\027.kvrpcpb.RawGetResponse\"\000\022;\n\006RawPut\022\026."
  "kvrpcpb.RawPutRequest\032\027.kvrpcpb.RawPutRe"
  "sponse\"\000\022D\n\tRawDelete\022\031.kvrpcpb.RawDelet"
  "eRequest\032\032.kvrpcpb.RawDeleteResponse\"\000\022>"
  "\n\007RawScan\022\027.kvrpcpb.RawScanRequest\032\030.kvr"
  "pcpb.RawScanResponse\"\000\0229\n\004Raft\022\032.raft_se"
  "rverpb.RaftMessage\032\023.raft_serverpb.Done\""
  "\000\022\?\n\010Snapshot\022\034.raft_serverpb.SnapshotCh"
  "unk\032\023.raft_serverpb.Done\"\000\022<\n\013Coprocesso"
  "r\022\024.coprocessor.Request\032\025.coprocessor.Re"
  "sponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tinykvpb_2eproto_deps[4] = {
  &::descriptor_table_coprocessor_2eproto,
  &::descriptor_table_kvrpcpb_2eproto,
  &::descriptor_table_raft_5fcmdpb_2eproto,
  &::descriptor_table_raft_5fserverpb_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tinykvpb_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tinykvpb_2eproto_once;
static bool descriptor_table_tinykvpb_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tinykvpb_2eproto = {
  &descriptor_table_tinykvpb_2eproto_initialized, descriptor_table_protodef_tinykvpb_2eproto, "tinykvpb.proto", 1296,
  &descriptor_table_tinykvpb_2eproto_once, descriptor_table_tinykvpb_2eproto_sccs, descriptor_table_tinykvpb_2eproto_deps, 0, 4,
  schemas, file_default_instances, TableStruct_tinykvpb_2eproto::offsets,
  file_level_metadata_tinykvpb_2eproto, 0, file_level_enum_descriptors_tinykvpb_2eproto, file_level_service_descriptors_tinykvpb_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tinykvpb_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tinykvpb_2eproto), true);
namespace tinykvpb {

// @@protoc_insertion_point(namespace_scope)
}  // namespace tinykvpb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
